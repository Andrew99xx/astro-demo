---
import { YouTube } from "astro-embed";
import moment from "moment";
import {
  FacebookIcon,
  FacebookShareButton,
  LinkedinIcon,
  LinkedinShareButton,
  TwitterIcon,
  TwitterShareButton,
} from "react-share";
import FenceVideoTutorials from "../../components/FenceVideoTutorials/FenceVideoTutorials";
import client from "../../graphql/client/ApolloClient";
import type { IFenceVideoDetailsResponse } from "../../graphql/generatedType/VideoDetailsTypes";
import { IVideoDetailsQuery } from "../../graphql/gql/videoDetails.gql";
import Layout from "../../layouts/Layout.astro";
import ReactPlayer from "react-player";
import { CloudfrontImg } from "../../components/ui/CloudfrontImg";

const { slug } = Astro.params;

const { data: videoDetailsData } =
  await client.query<IFenceVideoDetailsResponse>({
    query: IVideoDetailsQuery,
    variables: {
      id: slug,
    },
    fetchPolicy: "cache-first",
  });

const mainData = videoDetailsData?.allFenceInstallationVideo?.edges[0]?.node;
---

<Layout
  title={videoDetailsData?.allFenceInstallationVideo?.edges[0]?.node?.seo
    ?.title}
  description={videoDetailsData?.allFenceInstallationVideo?.edges[0]?.node?.seo
    ?.metaDesc}
  metaKeywords={videoDetailsData?.allFenceInstallationVideo?.edges[0]?.node?.seo
    ?.metaKeywords}
  opengraphDescription={videoDetailsData?.allFenceInstallationVideo?.edges[0]
    ?.node?.seo?.opengraphDescription}
  metaRobotsNofollow={videoDetailsData?.allFenceInstallationVideo?.edges[0]
    ?.node?.seo?.metaRobotsNofollow}
  metaRobotsNoindex={videoDetailsData?.allFenceInstallationVideo?.edges[0]?.node
    ?.seo?.metaRobotsNoindex}
  twitterDescription={videoDetailsData?.allFenceInstallationVideo?.edges[0]
    ?.node?.seo?.twitterDescription}
  twitterTitle={videoDetailsData?.allFenceInstallationVideo?.edges[0]?.node?.seo
    ?.twitterTitle}
  twitterImage={videoDetailsData?.allFenceInstallationVideo?.edges[0]?.node?.seo
    ?.twitterImage?.mediaItemUrl}
  twitterImage={videoDetailsData?.allFenceInstallationVideo?.edges[0]?.node?.seo
    ?.twitterImage?.altText}
  opengraphTitle={videoDetailsData?.allFenceInstallationVideo?.edges[0]?.node
    ?.seo?.opengraphTitle}
  opengraphType={videoDetailsData?.allFenceInstallationVideo?.edges[0]?.node
    ?.seo?.opengraphType}
  opengraphUrl={videoDetailsData?.allFenceInstallationVideo?.edges[0]?.node?.seo
    ?.opengraphUrl}
  opengraphSiteName={videoDetailsData?.allFenceInstallationVideo?.edges[0]?.node
    ?.seo?.opengraphSiteName}
  focuskw={videoDetailsData?.allFenceInstallationVideo?.edges[0]?.node?.seo
    ?.focuskw}
  canonical={videoDetailsData?.allFenceInstallationVideo?.edges[0]?.node?.seo
    ?.canonical}
  schema={videoDetailsData?.allFenceInstallationVideo?.edges[0]?.node?.seo
    ?.schema?.raw}
>
  <!-- banner -->
  <div
    class="relative min-h-[500px] bannerHome before:content-[''] before:absolute before:top-0 before:left-0 before:w-full before:h-full before:bg-[rgba(0,0,0,.35)] before:z-20"
  >
    <figure class="absolute size-full left-0 top-0 z-10">
      <CloudfrontImg
        src={mainData?.fenceVideoTutorialPagePurpose?.videoThumbImage?.node
          ?.mediaItemUrl}
        alt={mainData?.fenceVideoTutorialPagePurpose?.videoThumbImage?.node
          ?.altText}
        className="size-full object-cover object-top"
      />
    </figure>

    <div class="pt-[300px] pb-[20px] relative z-20">
      <div class="container">
        <a
          href="/fence-services/fence-video-tutorials/"
          class="text-white hover:text-[#51acfb] text-[.9rem] mb-[.8rem] uppercase font-montserratsemibold"
          >Fence Video Tutorials</a
        >
        <h1
          class="text-white text-[60px] font-montserratregular text-left font-normal capitalize"
        >
          {mainData?.title}
        </h1>
        <div class="flex items-center mt-2">
          <p class="text-white text-[20px] font-montserratsemibold">
            {moment(mainData?.date).format("MMM DD YYYY")} /
          </p>
          <p
            class="text-white text-[20px] font-montserratsemibold pl-2 transition-all duration-300"
          >
            by {mainData?.fenceVideoTutorialPagePurpose?.postedBy}
          </p>
        </div>
      </div>
    </div>
  </div>

  <FenceVideoTutorials data={videoDetailsData} client:only />
  <!-- body -->

  <!-- <div class="py-[100px]">
    <div class="container">
      <div class="videoTutotialDetails" set:html={mainData?.content} />
      <h3 class="text-[32px] mb-[30px]">Want a quick overview, Watch this!</h3>
      <ReactPlayer
        class="w-full max-w-[3000px] "
        url={mainData?.fenceVideoTutorialPagePurpose
          ?.fenceVideoTutorialVideoLink}
          width={500}
          height={500}
      />
      <div class="mt-[40px]">
        <h3 class="text-[32px] mb-[10px]">Need Help?</h3>

        <p>
          We can help! <a href="/contact-us">Send us your Questions</a>, or pick
          up the phone and give us a call!
        </p>
      </div>

      <ul class="flex flex-wrap items-center justify-end">
        <li class="inline-flex items-center justify-center mr-2">
          <FacebookShareButton
            client:load
            url={"https://leanwdev.com//fence-video-tutorials/homeowners-association-fence-considerations"}
          >
            <FacebookIcon size={32} round={true} />
          </FacebookShareButton>
        </li>
        <li class="inline-flex items-center justify-center mr-2">
          <TwitterShareButton
            client:load
            url={"https://leanwdev.com//fence-video-tutorials/homeowners-association-fence-considerations"}
          >
            <TwitterIcon size={32} round={true} />
          </TwitterShareButton>
        </li>

        <li class="inline-flex items-center justify-center">
          <LinkedinShareButton
            client:load
            url={"https://leanwdev.com//fence-video-tutorials/homeowners-association-fence-considerations"}
          >
            <LinkedinIcon size={32} round={true} />
          </LinkedinShareButton>
        </li>
      </ul>
    </div>
  </div> -->
</Layout>
