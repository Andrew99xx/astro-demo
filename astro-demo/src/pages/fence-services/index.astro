---
import InnerBanner from "../../components/InnerBanner/InnerBanner";
import client from "../../graphql/client/ApolloClient";
import type { IFenceTypesQuery } from "../../graphql/generatedType/FenceTypeResponseTypes";
import type { IFenceServicesSidebarQuery } from "../../graphql/generatedType/FenceServiceTypes";

import Layout from "../../layouts/Layout.astro";
import FenceServiceContent from "../../components/FenceServiceContent/FenceServiceContent";
import { FenceServicesSidebarQuery } from "../../graphql/gql/fenceService.gql";
import type { IServiceLocationResponse } from "../../graphql/generatedType/ResponseType";
import { IServiceLocationQuery } from "../../graphql/gql/birmingham.gql";
import NewsRecentPost from "../../components/NewsRecentPost/NewsRecentPost";
import type { ICommonPagesQuery } from "../../graphql/generatedType/cmsTypes";
import { PrivacyPolicyQuery } from "../../graphql/gql/cms.gql";

const { data: fenceServicesSidebarData } =
  await client.query<IFenceServicesSidebarQuery>({
    query: FenceServicesSidebarQuery,
  });
const { data: locationData, error: birminghamError } =
  await client.query<IServiceLocationResponse>({
    query: IServiceLocationQuery,
    variables: {
      id: "birmingham",
    },
    fetchPolicy: "cache-first",
  });

const { data: fenceServiceData } = await client.query<ICommonPagesQuery>({
  query: PrivacyPolicyQuery,
  variables: {
    id: "2908",
  },
  fetchPolicy: "cache-first",
});
---

<Layout
  title={fenceServiceData?.page?.seo?.title}
  description={fenceServiceData?.page?.seo?.metaDesc}
  metaKeywords={fenceServiceData?.page?.seo?.metaKeywords}
  opengraphDescription={fenceServiceData?.page?.seo?.opengraphDescription}
  metaRobotsNofollow={fenceServiceData?.page?.seo?.metaRobotsNofollow}
  metaRobotsNoindex={fenceServiceData?.page?.seo?.metaRobotsNoindex}
  twitterDescription={fenceServiceData?.page?.seo?.twitterDescription}
  twitterTitle={fenceServiceData?.page?.seo?.twitterTitle}
  twitterImage={fenceServiceData?.page?.seo?.twitterImage?.mediaItemUrl}
  twitterImage={fenceServiceData?.page?.seo?.twitterImage?.altText}
  opengraphTitle={fenceServiceData?.page?.seo?.opengraphTitle}
  opengraphType={fenceServiceData?.page?.seo?.opengraphType}
  opengraphUrl={fenceServiceData?.page?.seo?.opengraphUrl}
  opengraphSiteName={fenceServiceData?.page?.seo?.opengraphSiteName}
  focuskw={fenceServiceData?.page?.seo?.focuskw}
  canonical={fenceServiceData?.page?.seo?.canonical}
  schema={fenceServiceData?.page?.seo?.schema?.raw}
>
  <InnerBanner
    data={fenceServiceData.page.commonHeaderBanner}
    commonTitle={fenceServiceData?.page?.commonHeaderBanner
      ?.commonHeaderBannerTitle}
    client:load
  />
  <FenceServiceContent
    fenceServiceData={fenceServiceData}
    sidebarData={fenceServicesSidebarData}
    client:load
  />

  <NewsRecentPost
    postData={locationData?.posts}
    serviceData={locationData?.locationState?.edges[0]?.node?.location}
    client:load
  />
</Layout>
