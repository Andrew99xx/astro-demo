---
import InnerBanner from "../../../components/InnerBanner/InnerBanner";
import VinyleFence from "../../../components/VinyleFence/VinyleFence";
import client from "../../../graphql/client/ApolloClient";
import type {
  FenceCategoryDetails,
  ICategoryType,
  IFenceTypesSidebar,
} from "../../../graphql/generatedType/FenceTypeResponseTypes";
import { CommonSideBarQuery } from "../../../graphql/gql/commonSidebar.gql";
import {
  CategoryPost,
  FenceTypeCategoryDetailsQuery,
} from "../../../graphql/gql/fenceTypeCategoryDetails.gql";
import Layout from "../../../layouts/Layout.astro";

const { slug } = Astro.params;

const { data: fenceTypeCategoryDetails, error: fenceTypeCategoryDetailsError } =
  await client.query<FenceCategoryDetails>({
    query: FenceTypeCategoryDetailsQuery,
    variables: {
      id: slug,
    },
    fetchPolicy: "cache-first",
  });

const { data: commonSidebarData } = await client.query<IFenceTypesSidebar>({
  query: CommonSideBarQuery,
});

let slugarray = [];
fenceTypeCategoryDetails?.allFenceTypesCategory?.edges[0]?.node?.fenceTypesCategoryPurpose?.fenceNewsChooseCategory?.edges.forEach(
  (item) => slugarray.push(item.node.slug)
);
console.log(slugarray, "category_slugs");

const { data: fenceCategory, error: fenceCategoryerror } =
  await client.query<ICategoryType>({
    query: CategoryPost,
    variables: {
      categorySlug: slugarray,
    },
  });

console.log(
  fenceTypeCategoryDetails?.allFenceTypesCategory?.edges[0]?.node
    ?.fenceTypesCategoryPurpose,
  "fenceTypesCategoryPurpose"
);
---

<Layout
  title={fenceTypeCategoryDetails?.allFenceTypesCategory?.edges[0]?.node?.seo
    ?.title}
  description={fenceTypeCategoryDetails?.allFenceTypesCategory?.edges[0]?.node
    ?.seo?.metaDesc}
  metaKeywords={fenceTypeCategoryDetails?.allFenceTypesCategory?.edges[0]?.node
    ?.seo?.metaKeywords}
  opengraphDescription={fenceTypeCategoryDetails?.allFenceTypesCategory
    ?.edges[0]?.node?.seo?.opengraphDescription}
  metaRobotsNofollow={fenceTypeCategoryDetails?.allFenceTypesCategory?.edges[0]
    ?.node?.seo?.metaRobotsNofollow}
  metaRobotsNoindex={fenceTypeCategoryDetails?.allFenceTypesCategory?.edges[0]
    ?.node?.seo?.metaRobotsNoindex}
  twitterDescription={fenceTypeCategoryDetails?.allFenceTypesCategory?.edges[0]
    ?.node?.seo?.twitterDescription}
  twitterTitle={fenceTypeCategoryDetails?.allFenceTypesCategory?.edges[0]?.node
    ?.seo?.twitterTitle}
  twitterImage={fenceTypeCategoryDetails?.allFenceTypesCategory?.edges[0]?.node
    ?.seo?.twitterImage?.mediaItemUrl}
  twitterImage={fenceTypeCategoryDetails?.allFenceTypesCategory?.edges[0]?.node
    ?.seo?.twitterImage?.altText}
  opengraphTitle={fenceTypeCategoryDetails?.allFenceTypesCategory?.edges[0]
    ?.node?.seo?.opengraphTitle}
  opengraphType={fenceTypeCategoryDetails?.allFenceTypesCategory?.edges[0]?.node
    ?.seo?.opengraphType}
  opengraphUrl={fenceTypeCategoryDetails?.allFenceTypesCategory?.edges[0]?.node
    ?.seo?.opengraphUrl}
  opengraphSiteName={fenceTypeCategoryDetails?.allFenceTypesCategory?.edges[0]
    ?.node?.seo?.opengraphSiteName}
  focuskw={fenceTypeCategoryDetails?.allFenceTypesCategory?.edges[0]?.node?.seo
    ?.focuskw}
  canonical={fenceTypeCategoryDetails?.allFenceTypesCategory?.edges[0]?.node
    ?.seo?.canonical}
  schema={fenceTypeCategoryDetails?.allFenceTypesCategory?.edges[0]?.node?.seo
    ?.schema?.raw}
>
  {
    fenceTypeCategoryDetails?.allFenceTypesCategory?.edges[0] !== undefined &&
      !fenceTypeCategoryDetailsError && (
        <>
          <InnerBanner
            client:load
            commonTitle={
              fenceTypeCategoryDetails?.allFenceTypesCategory?.edges[0]?.node
                ?.name
            }
            data={
              fenceTypeCategoryDetails?.allFenceTypesCategory?.edges[0].node
                .commonHeaderBanner
            }
          />
          <VinyleFence
            client:only="react"
            data={fenceTypeCategoryDetails}
            categoryPostData={fenceCategory}
            sideBarData={commonSidebarData}
          />
        </>
      )
  }
</Layout>
